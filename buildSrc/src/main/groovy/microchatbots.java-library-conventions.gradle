plugins {
    id 'java-library'
    id 'checkstyle'
    id 'maven-publish'
    id 'signing'
}

ext {
    micronautVersion = new File("${projectDir}/../version.txt").text
    isReleaseVersion = !projectVersion.endsWith("SNAPSHOT")
}

group 'com.microchatbots'
version projectVersion

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-validation"
    api "io.micronaut:micronaut-inject"

    testImplementation("org.spockframework:spock-core:${spockVersion}") {
        exclude module:'groovy-all'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

Closure pomInfo = {
    name = project.name
    description = projectDesc
    url = 'https://microchatbots.com'
    licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }
    developers {
        developer {
            name = 'Sergio del Amo'
            email = 'sergio.delamo@softamo.com'
            organization = 'Softamo SL'
            organizationUrl = 'https://softamo.com'
        }
    }
    scm {
        connection = 'scm:git:https://github.com/microchatbots/microchatbots-core.git'
        developerConnection = 'scm:git:https://github.com/microchatbots/microchatbots-core.git'
        url = 'https://github.com/microchatbots/microchatbots-core'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            from components.java
            pom pomInfo
        }
    }
    repositories {
        maven {
            url = isReleaseVersion ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2' : 'https://oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
                password System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
            }
        }
    }
}
signing {
    sign publishing.publications.mavenJava
}

spotless {
    java {
        licenseHeaderFile("$rootDir/config/spotless.license.java")
    }
}

afterEvaluate {
    if (project.hasProperty('skipPublish') && project.skipPublish as boolean) {
        tasks.named('generateMetadataFileForMavenJavaPublication') { it.enabled = false }
        tasks.named('generatePomFileForMavenJavaPublication') { it.enabled = false }
        tasks.named('publishMavenJavaPublicationToMavenLocal') { it.enabled = false }
        tasks.named('publishToMavenLocal') { it.enabled = false }
        tasks.named('publish') { it.enabled = false }
    }
}